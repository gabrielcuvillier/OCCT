// This file has been automatically generated from resource file src/Shaders/PhongDirectionalLight.glsl

static const char Shaders_PhongDirectionalLight_glsl[] =
  "void occDirectionalLight (in int  theId,\n"
  "                          in vec3 theNormal,\n"
  "                          in vec3 theView,\n"
  "                          in bool theIsFront,\n"
  "                          in float theShadow)\n"
  "{\n"
  "  vec3 aLight = occLight_Position (theId);\n"
  "  vec3 aHalf = normalize (aLight + theView);\n"
  "  vec3  aFaceSideNormal = theIsFront ? theNormal : -theNormal;\n"
  "  float aNdotL = max (0.0, dot (aFaceSideNormal, aLight));\n"
  "  float aNdotH = max (0.0, dot (aFaceSideNormal, aHalf ));\n"
  "  float aSpecl = 0.0;\n"
  "  if (aNdotL > 0.0)\n"
  "  {\n"
  "    aSpecl = pow (aNdotH, occMaterial_Shininess (theIsFront));\n"
  "  }\n"
  "  Diffuse  += occLight_Diffuse  (theId) * aNdotL * theShadow;\n"
  "  Specular += occLight_Specular (theId) * aSpecl * theShadow;\n"
  "}\n";
